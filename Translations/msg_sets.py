import CryptoTask as CT

def autoenable_message(lang):
    if lang == "rus":
        return "–ê–≤—Ç–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π –≤–∫–ª.: {0}"
    elif lang == "eng":
        return "Auto enabling new tasks active status: {0}"

def notification_delay_set(lang):
    if lang == "rus":
        return '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º–∏ –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é —Ü–µ–Ω.'
    elif lang == "eng":
        return "Send me number of seconds for notification delay (this only works for changing the delay between notifications)"

def close_setting_menu(lang):
    if lang == "rus":
        return '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–∫—Ä—ã—Ç—ã!'
    elif lang == "eng":
        return 'Settings have been closed!'

def fastEditBtns_txt(lang, hord):
    if lang == "rus":
        hjd = '–æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è! ‚úÖ' if hord else "—Å–∫—Ä—ã—Ç—ã! ‚ùå"
        return f"‚ö†Ô∏è –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–ø–µ—Ä—å {hjd}"
    elif lang == "eng":
        hjd = "displaying! ‚úÖ" if hord else "hidden! ‚ùå"
        return f"‚ö†Ô∏è Fast edit buttons now {hjd}"

def once_notify_txt(lang, eod):
    if lang == "rus":
        ans = "–æ–¥–∏–Ω —Ä–∞–∑" if eod else "–∫–∞–∂–¥—ã–π —Ä–∞–∑"
        return f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Ç–µ–ø–µ—Ä—å —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç {ans}"
    elif lang == "eng":
        ans = "once" if eod else "every time"
        return f"Now task notifications will be triggered {ans}"

def notify_timer(lang, sec: float = 0):
    if lang == "rus":
        return f"üì£–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –∫—É—Ä—Å–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {sec}—Å–µ–∫.üïí"
    elif lang == "eng":
        return f"üì£Notification delay setted on {sec}sec.üïí"

def wrong_value(lang):
    if lang == "rus":
        return "‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ!"
    elif lang == "eng":
        return "‚ùåWrong value!"
    
def antiflood(lang, en):
    if lang == "rus":
        return f"–§–ª—É–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ —Ç–µ–ø–µ—Ä—å {'–≤–∫–ª—é—á–µ–Ω' if en else '–æ—Ç–∫–ª—é—á–µ–Ω'}. –ü—Ä–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–µ—Ä–∂–∫–∏ –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ 0.1 –∏ —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å–∏–≤–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."
    elif lang == "eng":
        return f"{'Notification delay is now increases after next notification by 0.1 for to avoid flooding with notifications (cleared when there are no notifications)' if en else 'Notification delay is now normal'}"


def isactive(lang, bl):
    if lang == "rus":
        return f"{'–ê–∫—Ç–∏–≤–Ω–æ ‚úÖ' if bl else '–û—Ç–∫–ª. ‚õîÔ∏è'}"
    elif lang == "eng":
        return f"{'Active ‚úÖ' if bl else 'Disabled ‚õîÔ∏è'}"

def current_sets(user : CT.UserSets):
    if user.language == "rus":
        return f"""üõ†–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.user_id}:
- –Ø–∑—ã–∫: {user.language}
- –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π:  {isactive(user.language,user.autostartcreate)}
- –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤: {isactive(user.language,user.fasteditbtns)}
- –ê–≤—Ç–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –≤—Å–µ–≥–¥–∞ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏): {isactive(user.language,user.notifyonce)}
- –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏: {user.notifytimer}
- –°–∫—Ä—ã—Ç–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫: {isactive(user.language,user.hidehint)}
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏—è:{isactive(user.language,user.autorofl)}
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Ñ–ª—É–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –∫—É—Ä—Å–æ–≤: {isactive(user.language,user.antiflood)}

–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∏–∂–µ"""
    elif user.language == "eng":
        return f"""üõ†Current settings of user {user.user_id}:
- Language: {user.language}
- Auto starting new tasks: {isactive(user.language,user.autostartcreate)}
- Displaying task fast edit buttons after notify: {isactive(user.language,user.fasteditbtns)}
- Auto disabling tasks after single trigger (trigger always after cource reaches setted price if disabled): {isactive(user.language,user.notifyonce)}
- Delay between notifications: {user.notifytimer}
- Hidding hints: {isactive(user.language,user.hidehint)}
- Automatic determination of the direction of price movement: {isactive(user.language,user.autorofl)}
- Notifications antiflood:  {isactive(user.language,user.antiflood)} 

You can edit settings by the keyboard bellow"""


def hide_hints(lng, ishide):
    if lng == "rus":
        sll ="—Å–∫—Ä—ã—Ç—ã" if ishide else "–æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è"
        return f"üìÉ–ü–æ–¥—Å–∫–∞–∑–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Ç–µ–ø–µ—Ä—å {sll}"
    elif lng == "eng":
        sll = "hidded" if ishide else "displayed"
        return f"üìÉHints are now {sll}!"
    
def autorofl(lng,rofl):
    if lng == "rus":
        return f"–ê–≤—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏–ª–∏ –ø–∞–¥–µ–Ω–∏—è —Ü–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {'–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ' if rofl else '–æ—Ç–∫–ª—é—á–µ–Ω–æ ‚ùå'}"
    elif lng == "eng":
        return f"Automatic detection of the rise or fall of the price depending on the set goal when creating a task: {'enabled ‚úÖ' if rofl else 'disabled ‚ùå'}"