import re
import CryptoTask as CT


def created_task_without_rofl(lang, base, quote, price):
    if lang == "rus":
        return f"üî∞–ü–∞—Ä–∞ {base}/{quote} —Å —Ü–µ–Ω–æ–π {price} —Å–æ–∑–¥–∞–Ω–∞.\n–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã: –ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ —Ä–æ—Å—Ç"
    elif lang == "eng":
        return f"üî∞Pair {base}/{quote} with value {price} created.\nSelect the movement of value of your pair falling or raising"

def created_task_without_price(lang, base, quote):
    if lang == "rus":
        return f"üî∞–ü–∞—Ä–∞ {base}/{quote} —Å–æ–∑–¥–∞–Ω–∞.\n–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –æ–∂–∏–¥–∞–µ–º—É—é —Ü–µ–Ω—É —ç—Ç–æ–π –≤–∞–ª—é—Ç—ã.\n–û—Ç–ø—Ä–∞–≤—å –ª—é–±–æ–µ —á–∏—Å–ª–æ"
    return f"üî∞Pair {base}/{quote} created.\nSpecify the value you want to get for this pair.\nSend any float value"

def created_task_fully(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"‚úÖ –ó–∞–¥–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—É—Ä—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–æ!\n–î–µ—Ç–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è:\n\n{ctask.ToString(lang)}"
    elif lang == "eng":
        return f"‚úÖ Currency exchange rates monitoring task has been created.\nDetails of your task:\n\n{ctask.ToString(lang)}"

def created_task_error_pair(lang):
    if lang == "rus":
        return "‚ùå–ö—Ä–∏–ø—Ç–æ –ø–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    elif lang == "eng":
        return "‚ùåYou have submitted the wrong currency names!"

def created_task_command_only(lang):
    if lang == "rus":
        return "üìÉ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫—Ä–∏–ø—Ç–æ –∑–∞–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–æ—Ä–≥–æ–≤—É—é –ø–∞—Ä—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä —Å –±–∏—Ä–∂–∏ binance).\n–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –±–∞–∑–æ–≤—É—é –≤–∞–ª—é—Ç—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 'BTC', 'LTC', 'ETH'\n\n–ò–ª–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è.\n–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã:\n/create <–±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞> <—Ä–∞–∑–º–µ–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞> <—Ü–µ–Ω–∞> <+ –∏–ª–∏ - –¥–ª—è —Ä–æ—Å—Ç–∞ –∏–ª–∏ –ø–∞–¥–µ–Ω–∏—è —Ü–µ–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ>"
    elif lang == "eng":
        return "üìÉ To create new monitoring task send me the pair witch you want to monitor.\nFirst send me base currency.\n\nExample: 'BTC' 'LTC' 'ETH' (without quotes)\n\nElse you can send full command like:\n/create <base currency name> <quote> <price> <+ or - for raising price or falling>"

def creation_quote_setted(lang: str = "eng", task: CT.CryptoTask = CT.CryptoTask):
    if lang == "rus":
        return f"üìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è\n\n‚ñ∂Ô∏è–í–∞—à–∞ –ø–∞—Ä–∞: {task.base}/{task.quote}.\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ü–µ–Ω—É, –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä '0.05','1200','0.00000312' –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)"
    return f"üìù Task creation\n\n‚ñ∂Ô∏èYour pair: {task.base}/{task.quote}.\nNow tell me the price to be reached\n(for example: '0.05', '1200', '0.000002' without quotes)\nWhen this price is reached, an alert will be sent"

def creation_base_setted(lang, base):
    if lang == "rus":
        return f"üìù–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è.\n\n–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞: {base}.\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ä–∞–∑–º–µ–Ω–Ω—É—é –≤–∞–ª—é—Ç—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä—ã."
    elif lang == "eng":
        return f"üìùTask creation\n\nYour base currency: {base}. \nNow select quote currency for create pair."

def creation_base_error(lang):
    if lang == "rus":
        return "üö´ –û—à–∏–±–∫–∞. –¢–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    elif lang == "eng":
        return "üö´ Error. You have sent wrong currency name"

def creation_price_setted(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"üî∞–ü–∞—Ä–∞: {ctask.base}/{ctask.quote}.\n–¶–µ–Ω–∞:{ctask.price}\n–ö—É—Ä—Å –¥–æ–ª–∂–µ–Ω üìà –≤—ã—Ä–∞—Å—Ç–∏ –¥–æ —Ç–∞–∫–æ–π —Ü–µ–Ω—ã –∏–ª–∏ —É–ø–∞—Å—Ç—å üìâ? –í—ã–±–µ—Ä–∏:"
    elif lang == "eng":
        return f"üî∞Pair: {ctask.base}/{ctask.quote}.\nPrice:{ctask.price}\nThe course must üìà rise to such a price or fall üìâ?"

def creation_price_error(lang):
    if lang == "rus":
        return f"‚ùå –¶–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞! –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–æ! –ü—Ä–∏–¥–µ—Ç—Å—è –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞"
    elif lang == "eng":
        return f"‚ùå You have sent wrong value! Task creation aborted! Send /createtask again."

def creation_final_already_have(lang, ctask: CT.CryptoTask, olctask: CT.CryptoTask):
    if lang == "rus":
        return f"‚ùóÔ∏è–ü–æ—Ö–æ–∂–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —Ç–∞–∫–æ–π –ø–∞—Ä—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {ctask.base}/{ctask.quote}.\n{olctask.ToString(lang)}\n\–ù—É–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –µ–µ!"
    elif lang == "eng":
        return f"‚ùóÔ∏èYou already have same task: {ctask.base}/{ctask.quote}.\n{olctask.ToString(lang)}\n\You must edit or delete it!"

def creation_selected(lang):
    if lang == "rus":
        return "üî∞–í—ã–±—Ä–∞–Ω–æ: "
    elif lang == "eng":
        return "üî∞You have selected: "

def edited_task_info(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"üñç –ó–∞–¥–∞–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –î–µ—Ç–∞–ª–∏:\n\n{ctask.ToString(lang)}"
    elif lang == "eng":
        return f"Task edited! Info:\n\n{ctask.ToString(lang)}"

def editting_task(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"üñç –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:\n{ctask.ToShortStr()}\n–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –ø—Ä–∏—à–ª–∏ –Ω–æ–≤—É—é —Ü–µ–Ω—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∫–æ—ç—Ñ–∏—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è./n–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤—Ç—å –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n/edit <id> <–Ω–æ–≤–∞—è —Ü–µ–Ω–∞>"
    elif lang == "eng":
        return f"üñç You are editting pair:\n{ctask.ToShortStr()}.\nFor edit price send the new one or just select price changing factor.\n\nElse you can send /edit <id> <new_price> to fast edit!"

def editting_task_error(lang):
    if lang == "rus":
        return "üö´ –ù–µ —É–∫–∞–∑–∞–Ω ID.\n–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É –≤–∏–¥–∞:\n\edit <id –∑–∞–¥–∞–Ω–∏—è> <–Ω–æ–≤–∞—è —Ü–µ–Ω–∞>* - —Ü–µ–Ω–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞"
    elif lang == "eng":
        return "üö´ Missing task ID.\nThe command should look like this: \n/edit <task_id> <new_price>* \n* - price is optional"

def id_error(lang):
    if lang == "rus":
        return "üö´–£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∑–∞–¥–∞–Ω–∏—è"
    elif lang == "eng":
        return "üö´You have sent wrong task id!"

def pair_monitoring_enabled(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {ctask.ToShortId()} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!"
    elif lang == "eng":
        return f"‚úÖ Pair {ctask.ToShortId()} is now monitoring!"

def pair_monitoring_disabled(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"‚ùóÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {ctask.ToShortId()} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    elif lang == "eng":
        return f"‚ùóÔ∏èMonitoring disabled for {ctask.ToShortId()}"

def pair_removed(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"‚ùå –ü–∞—Ä–∞ {ctask.ToShortId()} —É–¥–∞–ª–µ–Ω–∞!"
    elif lang == "eng":
        return f"‚ùå Pair ID {ctask.ToShortId()} removed!"

def check_price(lang):
    if lang == "rus":
        return "üî∞–î–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç—ã –ø—Ä–∏—à–ª–∏ –º–Ω–µ –ø–∞—Ä—É –≤–∏–¥–∞: BTC/USDT –≥–¥–µ <–±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞>/<–æ–±–º–µ–Ω–Ω–∞—è>"
    elif lang == "eng":
        return "üî∞To check current exchange rates send me currency pair.\n\nFor example: BTC/USDT or RVN/BTC.\nPlease observe this pattern"

def show_by_task_name(lang):
    if lang == "rus":
        return "‚ùóÔ∏è–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π —Å –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–æ–π - "
    elif lang == "eng":
        return "‚ùóÔ∏èYour list with base - "

def show_by_task_name_err(lang):
    if lang == "rus":
        return "‚ùå–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π —Å —Ç–∞–∫–æ–π –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–æ–π - "
    elif lang == "eng":
        return "‚ùåYou have no any tasks with such base currency - "

def current_price_pair(lang):
    if lang == "rus":
        return "üí∏–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –æ–±–º–µ–Ω–∞ –ø–∞—Ä—ã "
    elif lang == "eng":
        return "üí∏Current price for pair "

def wrong_pair(lang, base, quote):
    if lang == "rus":
        return f"üö´ –ü–∞—Ä–∞ {base}/{quote} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    elif lang == "eng":
        return f"üö´I can't find pair {base}/{quote}!"

def stop_all_tasks(lang):
    if lang == "rus":
        return "‚õîÔ∏è –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    elif lang == "eng":
        return "‚õîÔ∏è All tasks are stopped."

def no_tasks_detected(lang):
    if lang == "rus":
        return "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –Ω–∏–æ–¥–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!"
    elif lang == "eng":
        return "‚ùå You have not added any tasks yet!"

def start_all_tasks(lang, ix, alon):
    if lang == "rus":
        alreadyon = f"and {alon-ix} –±—ã–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã —Ä–∞–Ω–µ–µ ‚úÖ" if alon-ix>0 else ""
        return f"‚úÖ–í–∞—à–∏ {ix} –∑–∞–¥–∞–Ω–∏–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã, –∏ {alreadyon} "
    elif lang == "eng":
        alreadyon = f"and {alon-ix} tasks already ON ‚úÖ" if alon-ix>0 else ""
        
        return f"‚úÖYour {ix} monitoring tasks are started and {alreadyon} started"

def editted_task_info(lang):
    if lang == "rus":
        return "üñç –ó–∞–¥–∞–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –ò–Ω—Ñ–∞:\n\n"
    elif lang == "eng":
        return "üñç Task edited! Info:\n\n"

def wrong_value_error(lang):
    if lang == "rus":
        return "‚ùå –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!"
    elif lang == "eng":
        return '‚ùå You have sent wrong value!'

def all_tasks_removed(lang):
    if lang == "rus":
        return "‚ùå–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É–¥–∞–ª–µ–Ω—ã!‚ùå"
    elif lang == "eng":
        return f"‚ùåYour monitoring list has been fully removed‚ùå"

def action_outdated(lang):
    if lang == "rus":
        return "üö´ –î–µ–π—Å—Ç–≤–∏–µ —É—Å—Ç–∞—Ä–µ–ª–æ!"
    elif lang == "eng":
        return "üö´ Action is outdated."

def trigger_moved(lang, old_pr, pr, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"\n\n‚òëÔ∏è –¢—Ä–∏–≥–≥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç —Å {old_pr} –Ω–∞ {pr} –¥–ª—è {ctask.ToShortId()}"
    elif lang == "eng":
        return f"\n\n‚òëÔ∏è Trigger moved from {old_pr} to {pr} for {ctask.ToShortId()}"

def task_edit_request(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"üñç –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {ctask.ToShortStr()}.\n–í—ã–±–µ—Ä–∏ –∫–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –∏–ª–∏ —É–∫–∞–∂–∏ –Ω–æ–≤—É—é"
    elif lang == "eng":
        return f"üñç You are editting pair: {ctask.ToShortStr()}.\nSelect price changing factor or you can set your value."

def task_new_override(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"üñç–ó–∞–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–æ!\n–î–µ—Ç–∞–ª–∏ –∑–∞–¥–∞–Ω–∏—è:\n{ctask.ToString(lang)}"
    elif lang == "eng":
        return f"Your task overrided. \nDetails of your task:\n{ctask.ToString(lang)}"

def new_value_set(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"üñç–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–π —Ü–µ–Ω—ã –¥–ª—è –ø–∞—Ä—ã {ctask.ToShortStr()} –æ—Ç–ø—Ä–∞–≤—å —Ü–µ–Ω—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏!"
    elif lang == "eng":
        return f"üñçTo set a new value for pair {ctask.ToShortStr()} send it in next message"

def clear_tasks_list_request(lang):
    if lang == "rus":
        return "‚ùå –í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π?\n–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è!"
    elif lang == "eng":
        return "‚ùå Are you sure you want to clear the tracking list?\nAction cannot be undone"

def return_rates_tasks(lang):
    if lang == "rus":
        return f"üìàüìâ–í–∞—à —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ –ø–∞—Ä, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ:\n\n"
    elif lang == "eng":
        return f"üìàüìâYour currency exchange rates, based on your tasks: \n\n"

def return_monitoring_list(lang, printer, hints):
    if lang == "rus":
        if not hints:
            return f"–í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π:\n\n{printer}\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π –ø—Ä–∏—à–ª–∏ –∫–æ–º–∞–Ω–¥—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–∞:\n/show <–Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã>"
        else:
            return f"–í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π:\n\n{printer}"
    elif lang == "eng":
        if not hints:
            return f"Your monitoring task list:\n\n{printer}\nTo get filtred list by base send: /show <base currency>"
        else:
            return f"Your monitoring task list:\n\n{printer}"

def info_start(lang):
    if lang == "rus":
        return "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. –î–æ–±–∞–≤—å –∑–∞–¥–∞–Ω–∏—è –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏üìâ –∏–ª–∏ —É–º–µ–Ω—å—à–µ–Ω–∏–∏ —Ü–µ–Ω—ãüìà –¥–æ —Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –≤—ã—Å—Ç–∞–≤–∏—à—åüí∞.\nüìã–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: /help\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µüîé: /info"
    elif lang == "eng":
        return "Hello! I'm crypto currency exchange monitor bot. I can send you üí¨ notification when your currency is raise üìâ or fall üìà to setted value üí∞. \nFor create new task üñç send: /createtask.\nFor get info üìã send: /info\nFor get all available commands üîé send: /help"

def info_bot(lang):
    if lang == "rus":
        return """–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ:
–î–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –Ω–∞ python3 –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ pyTelegramBotAPI.
–ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –¥–æ–±–∞–≤–∏—à—å. 
–ë–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫—É—Ä—Å—ã –Ω–∞–ø—Ä—è–º—É—é —Å API Binanc–µ, —Ç–∞–∫ —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è.
üõ∏ –ö–æ–¥ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ Github: https://github.com/IronShell1207/CryCurMonitorBot
‚õè –†–∞–∑—Ä–∞–±–æ—Ç–∞–ª: Ironshell
–ú–æ–π —Å–∞–π—Ç: https://droidapps.cf/ —Ä–∞–∑–Ω—ã–π —Å–æ—Ñ—Ç, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª–µ–∑–Ω—ã–µ –≥–∞–π–¥—ã
–ï—Å–ª–∏ —Ç–µ–±–µ –∑–∞—Ö–æ—á–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–µ–Ω—è, –º–æ–∏ –∫–æ—à–µ–ª—å–∫–∏ 
\nü•áETH: 0xa35fbab442da4e65413045a4b9b147e2a0fc3e0c\nüéàLTC: LQiBdMeCNWAcSBEhc2QT3ffFz8a2t7zPcG"""
    elif lang == "eng":
        return """Brief information about this bot: 
This bot is written on Python3 with pyTelegramBotApi library.
This bot uses realtime binance exchange rates!
‚õè Developer: Ironshell
üõ∏ Github: https://github.com/IronShell1207/CryCurMonitorBot
My web: https://droidapps.cf/en/
If bot is usefull for you, you can buy my a ‚òïÔ∏è and thx 2u).
\nü•áETH: 0xa35fbab442da4e65413045a4b9b147e2a0fc3e0c\nüéàLTC: LQiBdMeCNWAcSBEhc2QT3ffFz8a2t7zPcG
"""

def commands_list(lang):
    if lang == "rus":
        return """–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
1. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ - /create
–∏–ª–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è  
/create <–±–∞–∑–∞> <—Ä–∞–∑–º–µ–Ω> <–¶–µ–Ω–∞> <+ –∏–ª–∏ - –¥–ª—è —Ä–æ—Å—Ç–∞ –∏–ª–∏ –ø–∞–¥–µ–Ω–∏—è —Ü–µ–Ω—ã>
2. –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π - /turnontasks
3. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π - /stopalltasks
4. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è - /showtasks
5. –û—Ç–∫–ª—é—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –ø–æ ID - /disable <id>
6. –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞–Ω–∏—è –ø–æ ID - /enable <id>
7. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ /edit <id>
–∏–ª–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã
/edit <id> <–Ω–æ–≤–∞—è —Ü–µ–Ω–∞>
8. –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ - /remove <id>
9. –ó–∞–¥–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ - /settimer <sec>
10. –í—ã–≤–µ—Å—Ç–∏ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π - /getrates
11. –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä BTC)
/show <base>

*–¢—Ä–µ—É–≥–æ–ª—å–Ω—ã–µ —Å–∫–æ–±–∫–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ!
 """
    elif lang == "eng":
        return """Commands list:
1. Create new monitoring task - /createtask
or /createtask <base> <quote> <price> <+|-> ("+" for choose raising or "-" for falling price)
2. Start all monitoring tasks - /turnontasks
3. Stop all monitoring tasks - /stopalltasks
4. Show all tasks /showtasks
5. Disable monitoring by ID - /disable <id>
6. Start monitoring by ID - /enable <id>
7. Edit task - /edit <id>
8. Delete task /remove <id>
9. Set notification delay (seconds) - /settimer <secs>
10. Change notification style from separate messages to single - /setstyle
11. Get all current exchange rates - /getrates
12. Show tasks by base currency name - /show <base>

*Send commands without brackets only"""



def task_printer_raise(lang, ctask: CT.CryptoTask, newprice):
    if lang == "rus":
        return f"üî∫ {ctask.ToShortId()} —Ü–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞ üìà c {ctask.price} –¥–æ {newprice}!\n"
    elif lang == "eng":
        return f"üî∫ {ctask.ToShortId()} price raise üìà from {ctask.price} to {newprice}!\n" 

def task_printer_fall(lang, ctask: CT.CryptoTask, newprice):
    if lang == "rus":
        return f"üî∫ {ctask.ToShortId()} —Ü–µ–Ω–∞ —É–ø–∞–ª–∞ üìâ c {ctask.price} –¥–æ {newprice}!\n"
    elif lang == "eng":
        return f"üî∫ {ctask.ToShortId()} price fall üìâ from {ctask.price} to {newprice}!\n" 

def print_loop(lang, printer, ishints):
    if lang == "rus":
        if not ishints:
            return  f"‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π –ø–æ –∫—É—Ä—Å–∞–º:\n{printer}\n–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å:\n/edit <id> <—Ü–µ–Ω–∞>\n–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è:\n/disable <id>\n*–û—Ç–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ‚öôÔ∏è!"
        else:
            return printer
    elif lang == "eng":
        if not ishints:
            return f"‚ö†Ô∏è Your updated exchange rates list:\n{printer}\nTo edit task send: /edittask <task id>\nTo disable: /disable <task_id>*To disable fast edit buttons go to the settings ‚öôÔ∏è!"
        else:
            return printer

def loop_error_pair(lang, ctask: CT.CryptoTask):
    if lang == "rus":
        return f"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫—É—Ä—Å–∞ –¥–ª—è –ø–∞—Ä—ã:{ctask.base}/{ctask.quote}"
    elif lang == "eng":
        return f"Something went wrong with price checking of pair {ctask.base}/{ctask.quote}"